// Code generated by MockGen. DO NOT EDIT.
// Source: entry_service_interface.go

// Package mock_entry_service is a generated GoMock package.
package mock_entry_service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	command "github.com/anoriar/gophkeeper/internal/client/entry/dto/command"
	command_response "github.com/anoriar/gophkeeper/internal/client/entry/dto/command_response"
)

// MockEntryServiceInterface is a mock of EntryServiceInterface interface.
type MockEntryServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockEntryServiceInterfaceMockRecorder
}

// MockEntryServiceInterfaceMockRecorder is the mock recorder for MockEntryServiceInterface.
type MockEntryServiceInterfaceMockRecorder struct {
	mock *MockEntryServiceInterface
}

// NewMockEntryServiceInterface creates a new mock instance.
func NewMockEntryServiceInterface(ctrl *gomock.Controller) *MockEntryServiceInterface {
	mock := &MockEntryServiceInterface{ctrl: ctrl}
	mock.recorder = &MockEntryServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEntryServiceInterface) EXPECT() *MockEntryServiceInterfaceMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockEntryServiceInterface) Add(ctx context.Context, command command.AddEntryCommand) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", ctx, command)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockEntryServiceInterfaceMockRecorder) Add(ctx, command interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockEntryServiceInterface)(nil).Add), ctx, command)
}

// Delete mocks base method.
func (m *MockEntryServiceInterface) Delete(ctx context.Context, command command.DeleteEntryCommand) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, command)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockEntryServiceInterfaceMockRecorder) Delete(ctx, command interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockEntryServiceInterface)(nil).Delete), ctx, command)
}

// Detail mocks base method.
func (m *MockEntryServiceInterface) Detail(ctx context.Context, command command.DetailEntryCommand) (command_response.DetailEntryCommandResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Detail", ctx, command)
	ret0, _ := ret[0].(command_response.DetailEntryCommandResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Detail indicates an expected call of Detail.
func (mr *MockEntryServiceInterfaceMockRecorder) Detail(ctx, command interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Detail", reflect.TypeOf((*MockEntryServiceInterface)(nil).Detail), ctx, command)
}

// Edit mocks base method.
func (m *MockEntryServiceInterface) Edit(ctx context.Context, command command.EditEntryCommand) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Edit", ctx, command)
	ret0, _ := ret[0].(error)
	return ret0
}

// Edit indicates an expected call of Edit.
func (mr *MockEntryServiceInterfaceMockRecorder) Edit(ctx, command interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Edit", reflect.TypeOf((*MockEntryServiceInterface)(nil).Edit), ctx, command)
}

// List mocks base method.
func (m *MockEntryServiceInterface) List(ctx context.Context) ([]command_response.ListEntryCommandResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]command_response.ListEntryCommandResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockEntryServiceInterfaceMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockEntryServiceInterface)(nil).List), ctx)
}

// Sync mocks base method.
func (m *MockEntryServiceInterface) Sync(ctx context.Context, command command.SyncEntryCommand) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sync", ctx, command)
	ret0, _ := ret[0].(error)
	return ret0
}

// Sync indicates an expected call of Sync.
func (mr *MockEntryServiceInterfaceMockRecorder) Sync(ctx, command interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sync", reflect.TypeOf((*MockEntryServiceInterface)(nil).Sync), ctx, command)
}
