// Code generated by MockGen. DO NOT EDIT.
// Source: user_factory_interface.go

// Package mock_user_factory is a generated GoMock package.
package mock_user_factory

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	entity "github.com/anoriar/gophkeeper/internal/server/user/entity"
)

// MockUserFactoryInterface is a mock of UserFactoryInterface interface.
type MockUserFactoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserFactoryInterfaceMockRecorder
}

// MockUserFactoryInterfaceMockRecorder is the mock recorder for MockUserFactoryInterface.
type MockUserFactoryInterfaceMockRecorder struct {
	mock *MockUserFactoryInterface
}

// NewMockUserFactoryInterface creates a new mock instance.
func NewMockUserFactoryInterface(ctrl *gomock.Controller) *MockUserFactoryInterface {
	mock := &MockUserFactoryInterface{ctrl: ctrl}
	mock.recorder = &MockUserFactoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserFactoryInterface) EXPECT() *MockUserFactoryInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserFactoryInterface) Create(login, password, salt string) entity.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", login, password, salt)
	ret0, _ := ret[0].(entity.User)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserFactoryInterfaceMockRecorder) Create(login, password, salt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserFactoryInterface)(nil).Create), login, password, salt)
}
