// Code generated by MockGen. DO NOT EDIT.
// Source: salt_factory_interface.go

// Package mock_salt_factory is a generated GoMock package.
package mock_salt_factory

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSaltFactoryInterface is a mock of SaltFactoryInterface interface.
type MockSaltFactoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSaltFactoryInterfaceMockRecorder
}

// MockSaltFactoryInterfaceMockRecorder is the mock recorder for MockSaltFactoryInterface.
type MockSaltFactoryInterfaceMockRecorder struct {
	mock *MockSaltFactoryInterface
}

// NewMockSaltFactoryInterface creates a new mock instance.
func NewMockSaltFactoryInterface(ctrl *gomock.Controller) *MockSaltFactoryInterface {
	mock := &MockSaltFactoryInterface{ctrl: ctrl}
	mock.recorder = &MockSaltFactoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSaltFactoryInterface) EXPECT() *MockSaltFactoryInterfaceMockRecorder {
	return m.recorder
}

// GenerateSalt mocks base method.
func (m *MockSaltFactoryInterface) GenerateSalt() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateSalt")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateSalt indicates an expected call of GenerateSalt.
func (mr *MockSaltFactoryInterfaceMockRecorder) GenerateSalt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateSalt", reflect.TypeOf((*MockSaltFactoryInterface)(nil).GenerateSalt))
}
